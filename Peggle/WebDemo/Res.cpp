#include "Res.h"
#include "SexyAppFramework/ResourceManager.h"

using namespace Sexy;

#pragma warning(disable:4311 4312)

static bool gNeedRecalcVariableToIdMap = false;

bool Sexy::ExtractResourcesByName(ResourceManager *theManager, const char *theName)
{
	if (strcmp(theName,"Dialog")==0) return ExtractDialogResources(theManager);
	if (strcmp(theName,"Game")==0) return ExtractGameResources(theManager);
	if (strcmp(theName,"IP")==0) return ExtractIPResources(theManager);
	if (strcmp(theName,"Init")==0) return ExtractInitResources(theManager);
	if (strcmp(theName,"Interface")==0) return ExtractInterfaceResources(theManager);
	if (strcmp(theName,"LoadingThread")==0) return ExtractLoadingThreadResources(theManager);
	if (strcmp(theName,"MainMenu")==0) return ExtractMainMenuResources(theManager);
	if (strcmp(theName,"SecondPlay")==0) return ExtractSecondPlayResources(theManager);
	if (strcmp(theName,"Upsell")==0) return ExtractUpsellResources(theManager);
	return false;
}

Sexy::ResourceId Sexy::GetIdByStringId(const char *theStringId)
{
	typedef std::map<std::string,int> MyMap;
	static MyMap aMap;
	if(aMap.empty())
	{
		for(int i=0; i<RESOURCE_ID_MAX; i++)
			aMap[GetStringIdById(i)] = i;
	}

	MyMap::iterator anItr = aMap.find(theStringId);
	if (anItr == aMap.end())
		return RESOURCE_ID_MAX;
	else
		return (ResourceId) anItr->second;
}

// Dialog Resources
Image* Sexy::IMAGE_DLG_BLUEFRAME;
Image* Sexy::IMAGE_DLG_BOTTOMBAR;
Image* Sexy::IMAGE_DLG_BROWNBUTTON1;
Image* Sexy::IMAGE_DLG_BROWNBUTTON2;
Image* Sexy::IMAGE_DLG_BUTTON1;
Image* Sexy::IMAGE_DLG_BUTTON3;
Image* Sexy::IMAGE_DLG_CONNECTOR;
Image* Sexy::IMAGE_DLG_DIALOGBOX;
Image* Sexy::IMAGE_DLG_MENU;
Image* Sexy::IMAGE_DLG_PLAYBUTTON1;
Image* Sexy::IMAGE_DLG_PLAYWIDGET1;
Image* Sexy::IMAGE_DLG_POPUP;
Image* Sexy::IMAGE_DLG_SEGMENT;
Image* Sexy::IMAGE_DLG_SELECTORFRAME;
Image* Sexy::IMAGE_DLG_SLIDER;
Image* Sexy::IMAGE_DLG_SLIDERHILIGHT;
Image* Sexy::IMAGE_DLG_SLIDERORB;
Image* Sexy::IMAGE_DLG_TEXTBOX;
Image* Sexy::IMAGE_DLG_TEXTRECT;

bool Sexy::ExtractDialogResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		IMAGE_DLG_BLUEFRAME = aMgr.GetImageThrow("IMAGE_DLG_BLUEFRAME");
		IMAGE_DLG_BOTTOMBAR = aMgr.GetImageThrow("IMAGE_DLG_BOTTOMBAR");
		IMAGE_DLG_BROWNBUTTON1 = aMgr.GetImageThrow("IMAGE_DLG_BROWNBUTTON1");
		IMAGE_DLG_BROWNBUTTON2 = aMgr.GetImageThrow("IMAGE_DLG_BROWNBUTTON2");
		IMAGE_DLG_BUTTON1 = aMgr.GetImageThrow("IMAGE_DLG_BUTTON1");
		IMAGE_DLG_BUTTON3 = aMgr.GetImageThrow("IMAGE_DLG_BUTTON3");
		IMAGE_DLG_CONNECTOR = aMgr.GetImageThrow("IMAGE_DLG_CONNECTOR");
		IMAGE_DLG_DIALOGBOX = aMgr.GetImageThrow("IMAGE_DLG_DIALOGBOX");
		IMAGE_DLG_MENU = aMgr.GetImageThrow("IMAGE_DLG_MENU");
		IMAGE_DLG_PLAYBUTTON1 = aMgr.GetImageThrow("IMAGE_DLG_PLAYBUTTON1");
		IMAGE_DLG_PLAYWIDGET1 = aMgr.GetImageThrow("IMAGE_DLG_PLAYWIDGET1");
		IMAGE_DLG_POPUP = aMgr.GetImageThrow("IMAGE_DLG_POPUP");
		IMAGE_DLG_SEGMENT = aMgr.GetImageThrow("IMAGE_DLG_SEGMENT");
		IMAGE_DLG_SELECTORFRAME = aMgr.GetImageThrow("IMAGE_DLG_SELECTORFRAME");
		IMAGE_DLG_SLIDER = aMgr.GetImageThrow("IMAGE_DLG_SLIDER");
		IMAGE_DLG_SLIDERHILIGHT = aMgr.GetImageThrow("IMAGE_DLG_SLIDERHILIGHT");
		IMAGE_DLG_SLIDERORB = aMgr.GetImageThrow("IMAGE_DLG_SLIDERORB");
		IMAGE_DLG_TEXTBOX = aMgr.GetImageThrow("IMAGE_DLG_TEXTBOX");
		IMAGE_DLG_TEXTRECT = aMgr.GetImageThrow("IMAGE_DLG_TEXTRECT");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// Game Resources
Image* Sexy::IMAGE_ALPHABALL;
Image* Sexy::IMAGE_BALL;
Image* Sexy::IMAGE_BALLPEG;
Image* Sexy::IMAGE_BALLPEGCB;
Image* Sexy::IMAGE_BALLSHADOW;
Image* Sexy::IMAGE_BONUS10000;
Image* Sexy::IMAGE_BONUS100000;
Image* Sexy::IMAGE_BONUS100000LIGHT;
Image* Sexy::IMAGE_BONUS10000LIGHT;
Image* Sexy::IMAGE_BONUS50000;
Image* Sexy::IMAGE_BONUS50000LIGHT;
Image* Sexy::IMAGE_BONUSGLOW;
Image* Sexy::IMAGE_BONUSGLOW_BLUE;
Image* Sexy::IMAGE_BONUSGLOW_GREEN;
Image* Sexy::IMAGE_BONUSHALO;
Image* Sexy::IMAGE_BRICK;
Image* Sexy::IMAGE_BRICKCB;
Image* Sexy::IMAGE_BRICKGLOW;
Image* Sexy::IMAGE_CATCHERGLOW;
Image* Sexy::IMAGE_CIRCLE;
Image* Sexy::IMAGE_COINHEADS;
Image* Sexy::IMAGE_COINHILIGHT;
Image* Sexy::IMAGE_COINTAILS;
Image* Sexy::IMAGE_EMBER;
Image* Sexy::IMAGE_FEVERCAM;
Image* Sexy::IMAGE_FEVERGLOWSTAR;
Image* Sexy::IMAGE_FEVERRAY;
Image* Sexy::IMAGE_FEVERSCORE;
Image* Sexy::IMAGE_FEVERSCORETOP;
Image* Sexy::IMAGE_FEVERSPARK;
Image* Sexy::IMAGE_FEVERSTAR_BLUE;
Image* Sexy::IMAGE_FEVERSTAR_GREEN;
Image* Sexy::IMAGE_FEVERSTAR_RED;
Image* Sexy::IMAGE_FEVERTRAIL;
Image* Sexy::IMAGE_FLAMETRAIL;
Image* Sexy::IMAGE_FLECK;
Image* Sexy::IMAGE_GUIDEARROW;
Image* Sexy::IMAGE_GUIDEHIT;
Image* Sexy::IMAGE_GUIDEPOINT;
Image* Sexy::IMAGE_GUIDERECT;
Image* Sexy::IMAGE_GUIDERECT2;
Image* Sexy::IMAGE_PAUSED;
Image* Sexy::IMAGE_PEGGLOW;
Image* Sexy::IMAGE_PEGSHADOW;
Image* Sexy::IMAGE_POWERUPICON;
Image* Sexy::IMAGE_PULSE2_POWERUP;
Image* Sexy::IMAGE_PULSE2_SCORE;
Image* Sexy::IMAGE_PULSE_GOAL;
Image* Sexy::IMAGE_PULSE_NORMAL;
Image* Sexy::IMAGE_PULSE_POWERUP;
Image* Sexy::IMAGE_PULSE_SCORE;
Image* Sexy::IMAGE_PYRAMIDBALL;
Image* Sexy::IMAGE_PYRAMIDRAY;
Image* Sexy::IMAGE_SCOREICON;
Image* Sexy::IMAGE_SMOKE;
Image* Sexy::IMAGE_SPACESTAR;
Image* Sexy::IMAGE_STREAK;
Image* Sexy::IMAGE_TINYBLUERIBBON;
Image* Sexy::IMAGE_XFEVER;
Image* Sexy::IMAGE_XFEVERGLOW;

bool Sexy::ExtractGameResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		IMAGE_ALPHABALL = aMgr.GetImageThrow("IMAGE_ALPHABALL");
		IMAGE_BALL = aMgr.GetImageThrow("IMAGE_BALL");
		IMAGE_BALLPEG = aMgr.GetImageThrow("IMAGE_BALLPEG");
		IMAGE_BALLPEGCB = aMgr.GetImageThrow("IMAGE_BALLPEGCB");
		IMAGE_BALLSHADOW = aMgr.GetImageThrow("IMAGE_BALLSHADOW");
		IMAGE_BONUS10000 = aMgr.GetImageThrow("IMAGE_BONUS10000");
		IMAGE_BONUS100000 = aMgr.GetImageThrow("IMAGE_BONUS100000");
		IMAGE_BONUS100000LIGHT = aMgr.GetImageThrow("IMAGE_BONUS100000LIGHT");
		IMAGE_BONUS10000LIGHT = aMgr.GetImageThrow("IMAGE_BONUS10000LIGHT");
		IMAGE_BONUS50000 = aMgr.GetImageThrow("IMAGE_BONUS50000");
		IMAGE_BONUS50000LIGHT = aMgr.GetImageThrow("IMAGE_BONUS50000LIGHT");
		IMAGE_BONUSGLOW = aMgr.GetImageThrow("IMAGE_BONUSGLOW");
		IMAGE_BONUSGLOW_BLUE = aMgr.GetImageThrow("IMAGE_BONUSGLOW_BLUE");
		IMAGE_BONUSGLOW_GREEN = aMgr.GetImageThrow("IMAGE_BONUSGLOW_GREEN");
		IMAGE_BONUSHALO = aMgr.GetImageThrow("IMAGE_BONUSHALO");
		IMAGE_BRICK = aMgr.GetImageThrow("IMAGE_BRICK");
		IMAGE_BRICKCB = aMgr.GetImageThrow("IMAGE_BRICKCB");
		IMAGE_BRICKGLOW = aMgr.GetImageThrow("IMAGE_BRICKGLOW");
		IMAGE_CATCHERGLOW = aMgr.GetImageThrow("IMAGE_CATCHERGLOW");
		IMAGE_CIRCLE = aMgr.GetImageThrow("IMAGE_CIRCLE");
		IMAGE_COINHEADS = aMgr.GetImageThrow("IMAGE_COINHEADS");
		IMAGE_COINHILIGHT = aMgr.GetImageThrow("IMAGE_COINHILIGHT");
		IMAGE_COINTAILS = aMgr.GetImageThrow("IMAGE_COINTAILS");
		IMAGE_EMBER = aMgr.GetImageThrow("IMAGE_EMBER");
		IMAGE_FEVERCAM = aMgr.GetImageThrow("IMAGE_FEVERCAM");
		IMAGE_FEVERGLOWSTAR = aMgr.GetImageThrow("IMAGE_FEVERGLOWSTAR");
		IMAGE_FEVERRAY = aMgr.GetImageThrow("IMAGE_FEVERRAY");
		IMAGE_FEVERSCORE = aMgr.GetImageThrow("IMAGE_FEVERSCORE");
		IMAGE_FEVERSCORETOP = aMgr.GetImageThrow("IMAGE_FEVERSCORETOP");
		IMAGE_FEVERSPARK = aMgr.GetImageThrow("IMAGE_FEVERSPARK");
		IMAGE_FEVERSTAR_BLUE = aMgr.GetImageThrow("IMAGE_FEVERSTAR_BLUE");
		IMAGE_FEVERSTAR_GREEN = aMgr.GetImageThrow("IMAGE_FEVERSTAR_GREEN");
		IMAGE_FEVERSTAR_RED = aMgr.GetImageThrow("IMAGE_FEVERSTAR_RED");
		IMAGE_FEVERTRAIL = aMgr.GetImageThrow("IMAGE_FEVERTRAIL");
		IMAGE_FLAMETRAIL = aMgr.GetImageThrow("IMAGE_FLAMETRAIL");
		IMAGE_FLECK = aMgr.GetImageThrow("IMAGE_FLECK");
		IMAGE_GUIDEARROW = aMgr.GetImageThrow("IMAGE_GUIDEARROW");
		IMAGE_GUIDEHIT = aMgr.GetImageThrow("IMAGE_GUIDEHIT");
		IMAGE_GUIDEPOINT = aMgr.GetImageThrow("IMAGE_GUIDEPOINT");
		IMAGE_GUIDERECT = aMgr.GetImageThrow("IMAGE_GUIDERECT");
		IMAGE_GUIDERECT2 = aMgr.GetImageThrow("IMAGE_GUIDERECT2");
		IMAGE_PAUSED = aMgr.GetImageThrow("IMAGE_PAUSED");
		IMAGE_PEGGLOW = aMgr.GetImageThrow("IMAGE_PEGGLOW");
		IMAGE_PEGSHADOW = aMgr.GetImageThrow("IMAGE_PEGSHADOW");
		IMAGE_POWERUPICON = aMgr.GetImageThrow("IMAGE_POWERUPICON");
		IMAGE_PULSE2_POWERUP = aMgr.GetImageThrow("IMAGE_PULSE2_POWERUP");
		IMAGE_PULSE2_SCORE = aMgr.GetImageThrow("IMAGE_PULSE2_SCORE");
		IMAGE_PULSE_GOAL = aMgr.GetImageThrow("IMAGE_PULSE_GOAL");
		IMAGE_PULSE_NORMAL = aMgr.GetImageThrow("IMAGE_PULSE_NORMAL");
		IMAGE_PULSE_POWERUP = aMgr.GetImageThrow("IMAGE_PULSE_POWERUP");
		IMAGE_PULSE_SCORE = aMgr.GetImageThrow("IMAGE_PULSE_SCORE");
		IMAGE_PYRAMIDBALL = aMgr.GetImageThrow("IMAGE_PYRAMIDBALL");
		IMAGE_PYRAMIDRAY = aMgr.GetImageThrow("IMAGE_PYRAMIDRAY");
		IMAGE_SCOREICON = aMgr.GetImageThrow("IMAGE_SCOREICON");
		IMAGE_SMOKE = aMgr.GetImageThrow("IMAGE_SMOKE");
		IMAGE_SPACESTAR = aMgr.GetImageThrow("IMAGE_SPACESTAR");
		IMAGE_STREAK = aMgr.GetImageThrow("IMAGE_STREAK");
		IMAGE_TINYBLUERIBBON = aMgr.GetImageThrow("IMAGE_TINYBLUERIBBON");
		IMAGE_XFEVER = aMgr.GetImageThrow("IMAGE_XFEVER");
		IMAGE_XFEVERGLOW = aMgr.GetImageThrow("IMAGE_XFEVERGLOW");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// IP Resources
Image* Sexy::IMAGE_IP_B;
Image* Sexy::IMAGE_IP_BALLOTRON;
Image* Sexy::IMAGE_IP_BLC;
Image* Sexy::IMAGE_IP_BRC;
Image* Sexy::IMAGE_IP_FEVERMETER;
Image* Sexy::IMAGE_IP_L1;
Image* Sexy::IMAGE_IP_L2;
Image* Sexy::IMAGE_IP_LWINDOW;
Image* Sexy::IMAGE_IP_ORBGLOW;
Image* Sexy::IMAGE_IP_POWERUPBANNER;
Image* Sexy::IMAGE_IP_R1;
Image* Sexy::IMAGE_IP_R2;
Image* Sexy::IMAGE_IP_RWINDOW;
Image* Sexy::IMAGE_IP_SHOOTER;
Image* Sexy::IMAGE_IP_SHOOTERBACK;
Image* Sexy::IMAGE_IP_SHOOTERORB;
Image* Sexy::IMAGE_IP_TL1;
Image* Sexy::IMAGE_IP_TL2;
Image* Sexy::IMAGE_IP_TLC;
Image* Sexy::IMAGE_IP_TR1;
Image* Sexy::IMAGE_IP_TR2;
Image* Sexy::IMAGE_IP_TRC;

bool Sexy::ExtractIPResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		IMAGE_IP_B = aMgr.GetImageThrow("IMAGE_IP_B");
		IMAGE_IP_BALLOTRON = aMgr.GetImageThrow("IMAGE_IP_BALLOTRON");
		IMAGE_IP_BLC = aMgr.GetImageThrow("IMAGE_IP_BLC");
		IMAGE_IP_BRC = aMgr.GetImageThrow("IMAGE_IP_BRC");
		IMAGE_IP_FEVERMETER = aMgr.GetImageThrow("IMAGE_IP_FEVERMETER");
		IMAGE_IP_L1 = aMgr.GetImageThrow("IMAGE_IP_L1");
		IMAGE_IP_L2 = aMgr.GetImageThrow("IMAGE_IP_L2");
		IMAGE_IP_LWINDOW = aMgr.GetImageThrow("IMAGE_IP_LWINDOW");
		IMAGE_IP_ORBGLOW = aMgr.GetImageThrow("IMAGE_IP_ORBGLOW");
		IMAGE_IP_POWERUPBANNER = aMgr.GetImageThrow("IMAGE_IP_POWERUPBANNER");
		IMAGE_IP_R1 = aMgr.GetImageThrow("IMAGE_IP_R1");
		IMAGE_IP_R2 = aMgr.GetImageThrow("IMAGE_IP_R2");
		IMAGE_IP_RWINDOW = aMgr.GetImageThrow("IMAGE_IP_RWINDOW");
		IMAGE_IP_SHOOTER = aMgr.GetImageThrow("IMAGE_IP_SHOOTER");
		IMAGE_IP_SHOOTERBACK = aMgr.GetImageThrow("IMAGE_IP_SHOOTERBACK");
		IMAGE_IP_SHOOTERORB = aMgr.GetImageThrow("IMAGE_IP_SHOOTERORB");
		IMAGE_IP_TL1 = aMgr.GetImageThrow("IMAGE_IP_TL1");
		IMAGE_IP_TL2 = aMgr.GetImageThrow("IMAGE_IP_TL2");
		IMAGE_IP_TLC = aMgr.GetImageThrow("IMAGE_IP_TLC");
		IMAGE_IP_TR1 = aMgr.GetImageThrow("IMAGE_IP_TR1");
		IMAGE_IP_TR2 = aMgr.GetImageThrow("IMAGE_IP_TR2");
		IMAGE_IP_TRC = aMgr.GetImageThrow("IMAGE_IP_TRC");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// Init Resources
Font* Sexy::FONT_OVERLOAD16;
Font* Sexy::FONT_OVERLOAD16OUTLINE;
Font* Sexy::FONT_OVERLOAD16OUTLINE2;
Image* Sexy::IMAGE_MM_PLAY_BUTTON;

bool Sexy::ExtractInitResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		FONT_OVERLOAD16 = aMgr.GetFontThrow("FONT_OVERLOAD16");
		FONT_OVERLOAD16OUTLINE = aMgr.GetFontThrow("FONT_OVERLOAD16OUTLINE");
		FONT_OVERLOAD16OUTLINE2 = aMgr.GetFontThrow("FONT_OVERLOAD16OUTLINE2");
		IMAGE_MM_PLAY_BUTTON = aMgr.GetImageThrow("IMAGE_MM_PLAY_BUTTON");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// Interface Resources
Image* Sexy::IMAGE_INT_BACKSHADOW;
Image* Sexy::IMAGE_INT_BALL;
Image* Sexy::IMAGE_INT_BALLBACK;
Image* Sexy::IMAGE_INT_BALLGLASS;
Image* Sexy::IMAGE_INT_BALLOMASKBL;
Image* Sexy::IMAGE_INT_BALLOMASKBR;
Image* Sexy::IMAGE_INT_BALLOMASKTL;
Image* Sexy::IMAGE_INT_BALLOMASKTR;
Image* Sexy::IMAGE_INT_BUTTONCOVER;
Image* Sexy::IMAGE_INT_CANNON;
Image* Sexy::IMAGE_INT_CANNONCOVER;
Image* Sexy::IMAGE_INT_COUNTER;
Image* Sexy::IMAGE_INT_FBCENTERDISC;
Image* Sexy::IMAGE_INT_FBFREEBALL;
Image* Sexy::IMAGE_INT_FBGLOW;
Image* Sexy::IMAGE_INT_FBLIGHTUP;
Image* Sexy::IMAGE_INT_FBPOINTS;
Image* Sexy::IMAGE_INT_FEVERBARLITES;
Image* Sexy::IMAGE_INT_FEVERBARS;
Image* Sexy::IMAGE_INT_FEVERGLOW;
Image* Sexy::IMAGE_INT_FEVERGLOW1;
Image* Sexy::IMAGE_INT_FEVERGLOW2;
Image* Sexy::IMAGE_INT_FEVERGLOW3;
Image* Sexy::IMAGE_INT_FEVERMETER;
Image* Sexy::IMAGE_INT_FEVERMETERBOTTOM;
Image* Sexy::IMAGE_INT_FEVERMETERTOP;
Image* Sexy::IMAGE_INT_FEVERRAILING;
Image* Sexy::IMAGE_INT_FREEBALLMETER;
Image* Sexy::IMAGE_INT_FREEBALLMETERTOP;
Image* Sexy::IMAGE_INT_PLUNGER;
Image* Sexy::IMAGE_INT_SCOREHILIGHT;

bool Sexy::ExtractInterfaceResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		IMAGE_INT_BACKSHADOW = aMgr.GetImageThrow("IMAGE_INT_BACKSHADOW");
		IMAGE_INT_BALL = aMgr.GetImageThrow("IMAGE_INT_BALL");
		IMAGE_INT_BALLBACK = aMgr.GetImageThrow("IMAGE_INT_BALLBACK");
		IMAGE_INT_BALLGLASS = aMgr.GetImageThrow("IMAGE_INT_BALLGLASS");
		IMAGE_INT_BALLOMASKBL = aMgr.GetImageThrow("IMAGE_INT_BALLOMASKBL");
		IMAGE_INT_BALLOMASKBR = aMgr.GetImageThrow("IMAGE_INT_BALLOMASKBR");
		IMAGE_INT_BALLOMASKTL = aMgr.GetImageThrow("IMAGE_INT_BALLOMASKTL");
		IMAGE_INT_BALLOMASKTR = aMgr.GetImageThrow("IMAGE_INT_BALLOMASKTR");
		IMAGE_INT_BUTTONCOVER = aMgr.GetImageThrow("IMAGE_INT_BUTTONCOVER");
		IMAGE_INT_CANNON = aMgr.GetImageThrow("IMAGE_INT_CANNON");
		IMAGE_INT_CANNONCOVER = aMgr.GetImageThrow("IMAGE_INT_CANNONCOVER");
		IMAGE_INT_COUNTER = aMgr.GetImageThrow("IMAGE_INT_COUNTER");
		IMAGE_INT_FBCENTERDISC = aMgr.GetImageThrow("IMAGE_INT_FBCENTERDISC");
		IMAGE_INT_FBFREEBALL = aMgr.GetImageThrow("IMAGE_INT_FBFREEBALL");
		IMAGE_INT_FBGLOW = aMgr.GetImageThrow("IMAGE_INT_FBGLOW");
		IMAGE_INT_FBLIGHTUP = aMgr.GetImageThrow("IMAGE_INT_FBLIGHTUP");
		IMAGE_INT_FBPOINTS = aMgr.GetImageThrow("IMAGE_INT_FBPOINTS");
		IMAGE_INT_FEVERBARLITES = aMgr.GetImageThrow("IMAGE_INT_FEVERBARLITES");
		IMAGE_INT_FEVERBARS = aMgr.GetImageThrow("IMAGE_INT_FEVERBARS");
		IMAGE_INT_FEVERGLOW = aMgr.GetImageThrow("IMAGE_INT_FEVERGLOW");
		IMAGE_INT_FEVERGLOW1 = aMgr.GetImageThrow("IMAGE_INT_FEVERGLOW1");
		IMAGE_INT_FEVERGLOW2 = aMgr.GetImageThrow("IMAGE_INT_FEVERGLOW2");
		IMAGE_INT_FEVERGLOW3 = aMgr.GetImageThrow("IMAGE_INT_FEVERGLOW3");
		IMAGE_INT_FEVERMETER = aMgr.GetImageThrow("IMAGE_INT_FEVERMETER");
		IMAGE_INT_FEVERMETERBOTTOM = aMgr.GetImageThrow("IMAGE_INT_FEVERMETERBOTTOM");
		IMAGE_INT_FEVERMETERTOP = aMgr.GetImageThrow("IMAGE_INT_FEVERMETERTOP");
		IMAGE_INT_FEVERRAILING = aMgr.GetImageThrow("IMAGE_INT_FEVERRAILING");
		IMAGE_INT_FREEBALLMETER = aMgr.GetImageThrow("IMAGE_INT_FREEBALLMETER");
		IMAGE_INT_FREEBALLMETERTOP = aMgr.GetImageThrow("IMAGE_INT_FREEBALLMETERTOP");
		IMAGE_INT_PLUNGER = aMgr.GetImageThrow("IMAGE_INT_PLUNGER");
		IMAGE_INT_SCOREHILIGHT = aMgr.GetImageThrow("IMAGE_INT_SCOREHILIGHT");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// LoadingThread Resources
Font* Sexy::FONT_BALLSLEFT;
Font* Sexy::FONT_BONK;
Font* Sexy::FONT_BUTTON;
Font* Sexy::FONT_OVERLOAD10;
Font* Sexy::FONT_OVERLOAD10OUTLINE;
Font* Sexy::FONT_OVERLOAD12;
Font* Sexy::FONT_OVERLOAD12OUTLINE;
Font* Sexy::FONT_OVERLOAD24;
Font* Sexy::FONT_OVERLOAD24GRAD1;
Font* Sexy::FONT_OVERLOAD24GRAD2;
Font* Sexy::FONT_OVERLOAD24OUTLINE;
Font* Sexy::FONT_OVERLOADMONO10;
Font* Sexy::FONT_OVERLOADMONO12;
Font* Sexy::FONT_PLAIN;
Font* Sexy::FONT_PLAIN2;
Font* Sexy::FONT_PLAIN2BIG;
Font* Sexy::FONT_PLAIN2BIGOUTLINE;
Font* Sexy::FONT_PLAIN2OUTLINE;
Font* Sexy::FONT_PLAINOUTLINE;
Font* Sexy::FONT_SCORE_DISP;
Font* Sexy::FONT_SMALL;
Font* Sexy::FONT_SMALLMONO;
Font* Sexy::FONT_SMALL_DISP;
Font* Sexy::FONT_STAGE;
int Sexy::SOUND_ADD_BALL;
int Sexy::SOUND_BUTTON1;
int Sexy::SOUND_CANNONCOCK;
int Sexy::SOUND_CANNONSHOT;
int Sexy::SOUND_COINSPIN;
int Sexy::SOUND_COINSPIN_NO;
int Sexy::SOUND_CYMBAL;
int Sexy::SOUND_DIALOG_MOVE;
int Sexy::SOUND_EXTRABALL;
int Sexy::SOUND_FEVERHIT;
int Sexy::SOUND_FIREWORKS2;
int Sexy::SOUND_LEVELDONE;
int Sexy::SOUND_ODETOJOY;
int Sexy::SOUND_PEGHIT;
int Sexy::SOUND_PEGHIT2;
int Sexy::SOUND_PEGHIT3;
int Sexy::SOUND_PEGPOP;
int Sexy::SOUND_POINTBOOST;
int Sexy::SOUND_POWERUP_GUIDE;
int Sexy::SOUND_RICHOCHET;
int Sexy::SOUND_SCORECOUNTER;
int Sexy::SOUND_SIGH;
int Sexy::SOUND_SKILLSHOT;
int Sexy::SOUND_SLOWMO;
int Sexy::SOUND_TEXT_WOOSH;
int Sexy::SOUND_WHISTLE;
int Sexy::SOUND_WOOSH;

bool Sexy::ExtractLoadingThreadResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		FONT_BALLSLEFT = aMgr.GetFontThrow("FONT_BALLSLEFT");
		FONT_BONK = aMgr.GetFontThrow("FONT_BONK");
		FONT_BUTTON = aMgr.GetFontThrow("FONT_BUTTON");
		FONT_OVERLOAD10 = aMgr.GetFontThrow("FONT_OVERLOAD10");
		FONT_OVERLOAD10OUTLINE = aMgr.GetFontThrow("FONT_OVERLOAD10OUTLINE");
		FONT_OVERLOAD12 = aMgr.GetFontThrow("FONT_OVERLOAD12");
		FONT_OVERLOAD12OUTLINE = aMgr.GetFontThrow("FONT_OVERLOAD12OUTLINE");
		FONT_OVERLOAD24 = aMgr.GetFontThrow("FONT_OVERLOAD24");
		FONT_OVERLOAD24GRAD1 = aMgr.GetFontThrow("FONT_OVERLOAD24GRAD1");
		FONT_OVERLOAD24GRAD2 = aMgr.GetFontThrow("FONT_OVERLOAD24GRAD2");
		FONT_OVERLOAD24OUTLINE = aMgr.GetFontThrow("FONT_OVERLOAD24OUTLINE");
		FONT_OVERLOADMONO10 = aMgr.GetFontThrow("FONT_OVERLOADMONO10");
		FONT_OVERLOADMONO12 = aMgr.GetFontThrow("FONT_OVERLOADMONO12");
		FONT_PLAIN = aMgr.GetFontThrow("FONT_PLAIN");
		FONT_PLAIN2 = aMgr.GetFontThrow("FONT_PLAIN2");
		FONT_PLAIN2BIG = aMgr.GetFontThrow("FONT_PLAIN2BIG");
		FONT_PLAIN2BIGOUTLINE = aMgr.GetFontThrow("FONT_PLAIN2BIGOUTLINE");
		FONT_PLAIN2OUTLINE = aMgr.GetFontThrow("FONT_PLAIN2OUTLINE");
		FONT_PLAINOUTLINE = aMgr.GetFontThrow("FONT_PLAINOUTLINE");
		FONT_SCORE_DISP = aMgr.GetFontThrow("FONT_SCORE_DISP");
		FONT_SMALL = aMgr.GetFontThrow("FONT_SMALL");
		FONT_SMALLMONO = aMgr.GetFontThrow("FONT_SMALLMONO");
		FONT_SMALL_DISP = aMgr.GetFontThrow("FONT_SMALL_DISP");
		FONT_STAGE = aMgr.GetFontThrow("FONT_STAGE");
		SOUND_ADD_BALL = aMgr.GetSoundThrow("SOUND_ADD_BALL");
		SOUND_BUTTON1 = aMgr.GetSoundThrow("SOUND_BUTTON1");
		SOUND_CANNONCOCK = aMgr.GetSoundThrow("SOUND_CANNONCOCK");
		SOUND_CANNONSHOT = aMgr.GetSoundThrow("SOUND_CANNONSHOT");
		SOUND_COINSPIN = aMgr.GetSoundThrow("SOUND_COINSPIN");
		SOUND_COINSPIN_NO = aMgr.GetSoundThrow("SOUND_COINSPIN_NO");
		SOUND_CYMBAL = aMgr.GetSoundThrow("SOUND_CYMBAL");
		SOUND_DIALOG_MOVE = aMgr.GetSoundThrow("SOUND_DIALOG_MOVE");
		SOUND_EXTRABALL = aMgr.GetSoundThrow("SOUND_EXTRABALL");
		SOUND_FEVERHIT = aMgr.GetSoundThrow("SOUND_FEVERHIT");
		SOUND_FIREWORKS2 = aMgr.GetSoundThrow("SOUND_FIREWORKS2");
		SOUND_LEVELDONE = aMgr.GetSoundThrow("SOUND_LEVELDONE");
		SOUND_ODETOJOY = aMgr.GetSoundThrow("SOUND_ODETOJOY");
		SOUND_PEGHIT = aMgr.GetSoundThrow("SOUND_PEGHIT");
		SOUND_PEGHIT2 = aMgr.GetSoundThrow("SOUND_PEGHIT2");
		SOUND_PEGHIT3 = aMgr.GetSoundThrow("SOUND_PEGHIT3");
		SOUND_PEGPOP = aMgr.GetSoundThrow("SOUND_PEGPOP");
		SOUND_POINTBOOST = aMgr.GetSoundThrow("SOUND_POINTBOOST");
		SOUND_POWERUP_GUIDE = aMgr.GetSoundThrow("SOUND_POWERUP_GUIDE");
		SOUND_RICHOCHET = aMgr.GetSoundThrow("SOUND_RICHOCHET");
		SOUND_SCORECOUNTER = aMgr.GetSoundThrow("SOUND_SCORECOUNTER");
		SOUND_SIGH = aMgr.GetSoundThrow("SOUND_SIGH");
		SOUND_SKILLSHOT = aMgr.GetSoundThrow("SOUND_SKILLSHOT");
		SOUND_SLOWMO = aMgr.GetSoundThrow("SOUND_SLOWMO");
		SOUND_TEXT_WOOSH = aMgr.GetSoundThrow("SOUND_TEXT_WOOSH");
		SOUND_WHISTLE = aMgr.GetSoundThrow("SOUND_WHISTLE");
		SOUND_WOOSH = aMgr.GetSoundThrow("SOUND_WOOSH");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// MainMenu Resources
Image* Sexy::IMAGE_MM_BJORN_BUT;
Image* Sexy::IMAGE_MM_CHALLENGE_GREY;
Image* Sexy::IMAGE_MM_CHOOSE_MODE;
Image* Sexy::IMAGE_MM_INSTRUCTIONS;
Image* Sexy::IMAGE_MM_KATTUT_GREY;

bool Sexy::ExtractMainMenuResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		IMAGE_MM_BJORN_BUT = aMgr.GetImageThrow("IMAGE_MM_BJORN_BUT");
		IMAGE_MM_CHALLENGE_GREY = aMgr.GetImageThrow("IMAGE_MM_CHALLENGE_GREY");
		IMAGE_MM_CHOOSE_MODE = aMgr.GetImageThrow("IMAGE_MM_CHOOSE_MODE");
		IMAGE_MM_INSTRUCTIONS = aMgr.GetImageThrow("IMAGE_MM_INSTRUCTIONS");
		IMAGE_MM_KATTUT_GREY = aMgr.GetImageThrow("IMAGE_MM_KATTUT_GREY");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// SecondPlay Resources
Image* Sexy::IMAGE_LS_CHALLENGEBADGE;
Image* Sexy::IMAGE_LS_LEVELSCREEN;
Image* Sexy::IMAGE_LS_LEVELSELECTOR;
Image* Sexy::IMAGE_LS_RANDOMLEVEL;
Image* Sexy::IMAGE_MM_CHALLENGE_MODE;
Image* Sexy::IMAGE_MM_KATTUT_BUT;
int Sexy::SOUND_POWERUP_PYRAMID;

bool Sexy::ExtractSecondPlayResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		IMAGE_LS_CHALLENGEBADGE = aMgr.GetImageThrow("IMAGE_LS_CHALLENGEBADGE");
		IMAGE_LS_LEVELSCREEN = aMgr.GetImageThrow("IMAGE_LS_LEVELSCREEN");
		IMAGE_LS_LEVELSELECTOR = aMgr.GetImageThrow("IMAGE_LS_LEVELSELECTOR");
		IMAGE_LS_RANDOMLEVEL = aMgr.GetImageThrow("IMAGE_LS_RANDOMLEVEL");
		IMAGE_MM_CHALLENGE_MODE = aMgr.GetImageThrow("IMAGE_MM_CHALLENGE_MODE");
		IMAGE_MM_KATTUT_BUT = aMgr.GetImageThrow("IMAGE_MM_KATTUT_BUT");
		SOUND_POWERUP_PYRAMID = aMgr.GetSoundThrow("SOUND_POWERUP_PYRAMID");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

// Upsell Resources
Image* Sexy::IMAGE_US_BOXART;
Image* Sexy::IMAGE_US_CHALLENGES;
Image* Sexy::IMAGE_US_CHALLENGES_TEXT;
Image* Sexy::IMAGE_US_GETDELUXE_TEXT;
Image* Sexy::IMAGE_US_LEVELS;
Image* Sexy::IMAGE_US_LEVELS_TEXT;
Image* Sexy::IMAGE_US_PLAYBUTTON1;
Image* Sexy::IMAGE_US_PLAYWIDGET1;
Image* Sexy::IMAGE_US_POWERS;
Image* Sexy::IMAGE_US_POWERS_TEXT;
Image* Sexy::IMAGE_US_UPSELLBOX;

bool Sexy::ExtractUpsellResources(ResourceManager *theManager)
{
	gNeedRecalcVariableToIdMap = true;

	ResourceManager &aMgr = *theManager;
	try
	{
		IMAGE_US_BOXART = aMgr.GetImageThrow("IMAGE_US_BOXART");
		IMAGE_US_CHALLENGES = aMgr.GetImageThrow("IMAGE_US_CHALLENGES");
		IMAGE_US_CHALLENGES_TEXT = aMgr.GetImageThrow("IMAGE_US_CHALLENGES_TEXT");
		IMAGE_US_GETDELUXE_TEXT = aMgr.GetImageThrow("IMAGE_US_GETDELUXE_TEXT");
		IMAGE_US_LEVELS = aMgr.GetImageThrow("IMAGE_US_LEVELS");
		IMAGE_US_LEVELS_TEXT = aMgr.GetImageThrow("IMAGE_US_LEVELS_TEXT");
		IMAGE_US_PLAYBUTTON1 = aMgr.GetImageThrow("IMAGE_US_PLAYBUTTON1");
		IMAGE_US_PLAYWIDGET1 = aMgr.GetImageThrow("IMAGE_US_PLAYWIDGET1");
		IMAGE_US_POWERS = aMgr.GetImageThrow("IMAGE_US_POWERS");
		IMAGE_US_POWERS_TEXT = aMgr.GetImageThrow("IMAGE_US_POWERS_TEXT");
		IMAGE_US_UPSELLBOX = aMgr.GetImageThrow("IMAGE_US_UPSELLBOX");
	}
	catch(ResourceManagerException&)
	{
		return false;
	}
	return true;
}

static void* gResources[] =
{
	&FONT_OVERLOAD16,
	&FONT_OVERLOAD16OUTLINE,
	&FONT_OVERLOAD16OUTLINE2,
	&IMAGE_MM_PLAY_BUTTON,
	&FONT_PLAIN,
	&FONT_PLAIN2BIG,
	&FONT_SMALL,
	&FONT_SMALLMONO,
	&FONT_SCORE_DISP,
	&FONT_SMALL_DISP,
	&FONT_BALLSLEFT,
	&FONT_BUTTON,
	&FONT_STAGE,
	&FONT_BONK,
	&FONT_OVERLOAD10,
	&FONT_OVERLOAD12,
	&FONT_OVERLOAD24,
	&FONT_OVERLOADMONO10,
	&FONT_OVERLOADMONO12,
	&FONT_OVERLOAD10OUTLINE,
	&FONT_OVERLOAD12OUTLINE,
	&FONT_OVERLOAD24OUTLINE,
	&FONT_OVERLOAD24GRAD1,
	&FONT_OVERLOAD24GRAD2,
	&FONT_PLAINOUTLINE,
	&FONT_PLAIN2,
	&FONT_PLAIN2OUTLINE,
	&FONT_PLAIN2BIGOUTLINE,
	&SOUND_PEGHIT,
	&SOUND_PEGHIT2,
	&SOUND_PEGHIT3,
	&SOUND_EXTRABALL,
	&SOUND_COINSPIN,
	&SOUND_COINSPIN_NO,
	&SOUND_LEVELDONE,
	&SOUND_PEGPOP,
	&SOUND_BUTTON1,
	&SOUND_POINTBOOST,
	&SOUND_SKILLSHOT,
	&SOUND_CANNONCOCK,
	&SOUND_CANNONSHOT,
	&SOUND_SCORECOUNTER,
	&SOUND_FIREWORKS2,
	&SOUND_RICHOCHET,
	&SOUND_CYMBAL,
	&SOUND_SIGH,
	&SOUND_WOOSH,
	&SOUND_TEXT_WOOSH,
	&SOUND_WHISTLE,
	&SOUND_FEVERHIT,
	&SOUND_POWERUP_GUIDE,
	&SOUND_SLOWMO,
	&SOUND_ADD_BALL,
	&SOUND_DIALOG_MOVE,
	&SOUND_ODETOJOY,
	&IMAGE_INT_BALL,
	&IMAGE_INT_BALLBACK,
	&IMAGE_INT_BUTTONCOVER,
	&IMAGE_INT_CANNON,
	&IMAGE_INT_CANNONCOVER,
	&IMAGE_INT_PLUNGER,
	&IMAGE_INT_BALLGLASS,
	&IMAGE_INT_FEVERMETER,
	&IMAGE_INT_FEVERMETERTOP,
	&IMAGE_INT_FEVERMETERBOTTOM,
	&IMAGE_INT_FEVERRAILING,
	&IMAGE_INT_FEVERBARS,
	&IMAGE_INT_FEVERBARLITES,
	&IMAGE_INT_COUNTER,
	&IMAGE_INT_FREEBALLMETER,
	&IMAGE_INT_FREEBALLMETERTOP,
	&IMAGE_INT_BACKSHADOW,
	&IMAGE_INT_FEVERGLOW,
	&IMAGE_INT_FEVERGLOW1,
	&IMAGE_INT_FEVERGLOW2,
	&IMAGE_INT_FEVERGLOW3,
	&IMAGE_INT_SCOREHILIGHT,
	&IMAGE_INT_BALLOMASKBL,
	&IMAGE_INT_BALLOMASKBR,
	&IMAGE_INT_BALLOMASKTL,
	&IMAGE_INT_BALLOMASKTR,
	&IMAGE_INT_FBCENTERDISC,
	&IMAGE_INT_FBGLOW,
	&IMAGE_INT_FBFREEBALL,
	&IMAGE_INT_FBLIGHTUP,
	&IMAGE_INT_FBPOINTS,
	&IMAGE_IP_B,
	&IMAGE_IP_BLC,
	&IMAGE_IP_BRC,
	&IMAGE_IP_L1,
	&IMAGE_IP_L2,
	&IMAGE_IP_R1,
	&IMAGE_IP_R2,
	&IMAGE_IP_TL1,
	&IMAGE_IP_TL2,
	&IMAGE_IP_TR1,
	&IMAGE_IP_TR2,
	&IMAGE_IP_TLC,
	&IMAGE_IP_TRC,
	&IMAGE_IP_SHOOTERBACK,
	&IMAGE_IP_SHOOTER,
	&IMAGE_IP_BALLOTRON,
	&IMAGE_IP_FEVERMETER,
	&IMAGE_IP_LWINDOW,
	&IMAGE_IP_RWINDOW,
	&IMAGE_IP_SHOOTERORB,
	&IMAGE_IP_POWERUPBANNER,
	&IMAGE_IP_ORBGLOW,
	&IMAGE_MM_INSTRUCTIONS,
	&IMAGE_MM_CHOOSE_MODE,
	&IMAGE_MM_BJORN_BUT,
	&IMAGE_MM_KATTUT_GREY,
	&IMAGE_MM_CHALLENGE_GREY,
	&IMAGE_LS_LEVELSCREEN,
	&IMAGE_LS_LEVELSELECTOR,
	&IMAGE_LS_CHALLENGEBADGE,
	&IMAGE_LS_RANDOMLEVEL,
	&IMAGE_MM_CHALLENGE_MODE,
	&IMAGE_MM_KATTUT_BUT,
	&SOUND_POWERUP_PYRAMID,
	&IMAGE_US_POWERS,
	&IMAGE_US_POWERS_TEXT,
	&IMAGE_US_LEVELS,
	&IMAGE_US_LEVELS_TEXT,
	&IMAGE_US_CHALLENGES,
	&IMAGE_US_CHALLENGES_TEXT,
	&IMAGE_US_BOXART,
	&IMAGE_US_GETDELUXE_TEXT,
	&IMAGE_US_PLAYBUTTON1,
	&IMAGE_US_PLAYWIDGET1,
	&IMAGE_US_UPSELLBOX,
	&IMAGE_STREAK,
	&IMAGE_POWERUPICON,
	&IMAGE_SCOREICON,
	&IMAGE_BONUSHALO,
	&IMAGE_BONUSGLOW,
	&IMAGE_BONUSGLOW_GREEN,
	&IMAGE_BONUSGLOW_BLUE,
	&IMAGE_BONUS10000,
	&IMAGE_BONUS50000,
	&IMAGE_BONUS100000,
	&IMAGE_BONUS10000LIGHT,
	&IMAGE_BONUS50000LIGHT,
	&IMAGE_BONUS100000LIGHT,
	&IMAGE_BALL,
	&IMAGE_GUIDERECT,
	&IMAGE_GUIDERECT2,
	&IMAGE_ALPHABALL,
	&IMAGE_GUIDEARROW,
	&IMAGE_GUIDEPOINT,
	&IMAGE_GUIDEHIT,
	&IMAGE_BRICK,
	&IMAGE_BRICKCB,
	&IMAGE_BALLPEG,
	&IMAGE_BALLPEGCB,
	&IMAGE_BALLSHADOW,
	&IMAGE_PEGSHADOW,
	&IMAGE_CIRCLE,
	&IMAGE_COINHEADS,
	&IMAGE_COINTAILS,
	&IMAGE_COINHILIGHT,
	&IMAGE_BRICKGLOW,
	&IMAGE_PEGGLOW,
	&IMAGE_PYRAMIDRAY,
	&IMAGE_FEVERRAY,
	&IMAGE_FEVERGLOWSTAR,
	&IMAGE_FEVERSTAR_RED,
	&IMAGE_FEVERSTAR_GREEN,
	&IMAGE_FEVERSTAR_BLUE,
	&IMAGE_FEVERSPARK,
	&IMAGE_FEVERTRAIL,
	&IMAGE_FEVERSCORE,
	&IMAGE_FEVERSCORETOP,
	&IMAGE_TINYBLUERIBBON,
	&IMAGE_PAUSED,
	&IMAGE_CATCHERGLOW,
	&IMAGE_PYRAMIDBALL,
	&IMAGE_FEVERCAM,
	&IMAGE_XFEVER,
	&IMAGE_XFEVERGLOW,
	&IMAGE_PULSE_NORMAL,
	&IMAGE_PULSE_GOAL,
	&IMAGE_PULSE_SCORE,
	&IMAGE_PULSE_POWERUP,
	&IMAGE_PULSE2_SCORE,
	&IMAGE_PULSE2_POWERUP,
	&IMAGE_SPACESTAR,
	&IMAGE_EMBER,
	&IMAGE_SMOKE,
	&IMAGE_FLECK,
	&IMAGE_FLAMETRAIL,
	&IMAGE_DLG_BOTTOMBAR,
	&IMAGE_DLG_BLUEFRAME,
	&IMAGE_DLG_SELECTORFRAME,
	&IMAGE_DLG_BUTTON1,
	&IMAGE_DLG_BUTTON3,
	&IMAGE_DLG_BROWNBUTTON1,
	&IMAGE_DLG_BROWNBUTTON2,
	&IMAGE_DLG_POPUP,
	&IMAGE_DLG_TEXTBOX,
	&IMAGE_DLG_DIALOGBOX,
	&IMAGE_DLG_SLIDER,
	&IMAGE_DLG_SLIDERHILIGHT,
	&IMAGE_DLG_SLIDERORB,
	&IMAGE_DLG_SEGMENT,
	&IMAGE_DLG_CONNECTOR,
	&IMAGE_DLG_PLAYWIDGET1,
	&IMAGE_DLG_PLAYBUTTON1,
	&IMAGE_DLG_TEXTRECT,
	&IMAGE_DLG_MENU,
	NULL
};

Image* Sexy::LoadImageById(ResourceManager *theManager, int theId)
{
	return (*((Image**)gResources[theId]) = theManager->LoadImage(GetStringIdById(theId)));
}

void Sexy::ReplaceImageById(ResourceManager *theManager, int theId, Image *theImage)
{
	theManager->ReplaceImage(GetStringIdById(theId),theImage);
	*(Image**)gResources[theId] = theImage;
}

Image* Sexy::GetImageById(int theId)
{
	return *(Image**)gResources[theId];
}

Font* Sexy::GetFontById(int theId)
{
	return *(Font**)gResources[theId];
}

int Sexy::GetSoundById(int theId)
{
	return *(int*)gResources[theId];
}

Image*& Sexy::GetImageRefById(int theId)
{
	return *(Image**)gResources[theId];
}

Font*& Sexy::GetFontRefById(int theId)
{
	return *(Font**)gResources[theId];
}

int& Sexy::GetSoundRefById(int theId)
{
	return *(int*)gResources[theId];
}

static Sexy::ResourceId GetIdByVariable(const void *theVariable)
{
	typedef std::map<int,int> MyMap;
	static MyMap aMap;
	if(gNeedRecalcVariableToIdMap)
	{
		gNeedRecalcVariableToIdMap = false;
		aMap.clear();
		for(int i=0; i<RESOURCE_ID_MAX; i++)
			aMap[*(int*)gResources[i]] = i;
	}

	MyMap::iterator anItr = aMap.find((int)theVariable);
	if (anItr == aMap.end())
		return RESOURCE_ID_MAX;
	else
		return (ResourceId) anItr->second;
}

Sexy::ResourceId Sexy::GetIdByImage(Image *theImage)
{
	return GetIdByVariable(theImage);
}

Sexy::ResourceId Sexy::GetIdByFont(Font *theFont)
{
	return GetIdByVariable(theFont);
}

Sexy::ResourceId Sexy::GetIdBySound(int theSound)
{
	return GetIdByVariable((void*)theSound);
}

const char* Sexy::GetStringIdById(int theId)
{
	switch(theId)
	{
		case FONT_OVERLOAD16_ID: return "FONT_OVERLOAD16";
		case FONT_OVERLOAD16OUTLINE_ID: return "FONT_OVERLOAD16OUTLINE";
		case FONT_OVERLOAD16OUTLINE2_ID: return "FONT_OVERLOAD16OUTLINE2";
		case IMAGE_MM_PLAY_BUTTON_ID: return "IMAGE_MM_PLAY_BUTTON";
		case FONT_PLAIN_ID: return "FONT_PLAIN";
		case FONT_PLAIN2BIG_ID: return "FONT_PLAIN2BIG";
		case FONT_SMALL_ID: return "FONT_SMALL";
		case FONT_SMALLMONO_ID: return "FONT_SMALLMONO";
		case FONT_SCORE_DISP_ID: return "FONT_SCORE_DISP";
		case FONT_SMALL_DISP_ID: return "FONT_SMALL_DISP";
		case FONT_BALLSLEFT_ID: return "FONT_BALLSLEFT";
		case FONT_BUTTON_ID: return "FONT_BUTTON";
		case FONT_STAGE_ID: return "FONT_STAGE";
		case FONT_BONK_ID: return "FONT_BONK";
		case FONT_OVERLOAD10_ID: return "FONT_OVERLOAD10";
		case FONT_OVERLOAD12_ID: return "FONT_OVERLOAD12";
		case FONT_OVERLOAD24_ID: return "FONT_OVERLOAD24";
		case FONT_OVERLOADMONO10_ID: return "FONT_OVERLOADMONO10";
		case FONT_OVERLOADMONO12_ID: return "FONT_OVERLOADMONO12";
		case FONT_OVERLOAD10OUTLINE_ID: return "FONT_OVERLOAD10OUTLINE";
		case FONT_OVERLOAD12OUTLINE_ID: return "FONT_OVERLOAD12OUTLINE";
		case FONT_OVERLOAD24OUTLINE_ID: return "FONT_OVERLOAD24OUTLINE";
		case FONT_OVERLOAD24GRAD1_ID: return "FONT_OVERLOAD24GRAD1";
		case FONT_OVERLOAD24GRAD2_ID: return "FONT_OVERLOAD24GRAD2";
		case FONT_PLAINOUTLINE_ID: return "FONT_PLAINOUTLINE";
		case FONT_PLAIN2_ID: return "FONT_PLAIN2";
		case FONT_PLAIN2OUTLINE_ID: return "FONT_PLAIN2OUTLINE";
		case FONT_PLAIN2BIGOUTLINE_ID: return "FONT_PLAIN2BIGOUTLINE";
		case SOUND_PEGHIT_ID: return "SOUND_PEGHIT";
		case SOUND_PEGHIT2_ID: return "SOUND_PEGHIT2";
		case SOUND_PEGHIT3_ID: return "SOUND_PEGHIT3";
		case SOUND_EXTRABALL_ID: return "SOUND_EXTRABALL";
		case SOUND_COINSPIN_ID: return "SOUND_COINSPIN";
		case SOUND_COINSPIN_NO_ID: return "SOUND_COINSPIN_NO";
		case SOUND_LEVELDONE_ID: return "SOUND_LEVELDONE";
		case SOUND_PEGPOP_ID: return "SOUND_PEGPOP";
		case SOUND_BUTTON1_ID: return "SOUND_BUTTON1";
		case SOUND_POINTBOOST_ID: return "SOUND_POINTBOOST";
		case SOUND_SKILLSHOT_ID: return "SOUND_SKILLSHOT";
		case SOUND_CANNONCOCK_ID: return "SOUND_CANNONCOCK";
		case SOUND_CANNONSHOT_ID: return "SOUND_CANNONSHOT";
		case SOUND_SCORECOUNTER_ID: return "SOUND_SCORECOUNTER";
		case SOUND_FIREWORKS2_ID: return "SOUND_FIREWORKS2";
		case SOUND_RICHOCHET_ID: return "SOUND_RICHOCHET";
		case SOUND_CYMBAL_ID: return "SOUND_CYMBAL";
		case SOUND_SIGH_ID: return "SOUND_SIGH";
		case SOUND_WOOSH_ID: return "SOUND_WOOSH";
		case SOUND_TEXT_WOOSH_ID: return "SOUND_TEXT_WOOSH";
		case SOUND_WHISTLE_ID: return "SOUND_WHISTLE";
		case SOUND_FEVERHIT_ID: return "SOUND_FEVERHIT";
		case SOUND_POWERUP_GUIDE_ID: return "SOUND_POWERUP_GUIDE";
		case SOUND_SLOWMO_ID: return "SOUND_SLOWMO";
		case SOUND_ADD_BALL_ID: return "SOUND_ADD_BALL";
		case SOUND_DIALOG_MOVE_ID: return "SOUND_DIALOG_MOVE";
		case SOUND_ODETOJOY_ID: return "SOUND_ODETOJOY";
		case IMAGE_INT_BALL_ID: return "IMAGE_INT_BALL";
		case IMAGE_INT_BALLBACK_ID: return "IMAGE_INT_BALLBACK";
		case IMAGE_INT_BUTTONCOVER_ID: return "IMAGE_INT_BUTTONCOVER";
		case IMAGE_INT_CANNON_ID: return "IMAGE_INT_CANNON";
		case IMAGE_INT_CANNONCOVER_ID: return "IMAGE_INT_CANNONCOVER";
		case IMAGE_INT_PLUNGER_ID: return "IMAGE_INT_PLUNGER";
		case IMAGE_INT_BALLGLASS_ID: return "IMAGE_INT_BALLGLASS";
		case IMAGE_INT_FEVERMETER_ID: return "IMAGE_INT_FEVERMETER";
		case IMAGE_INT_FEVERMETERTOP_ID: return "IMAGE_INT_FEVERMETERTOP";
		case IMAGE_INT_FEVERMETERBOTTOM_ID: return "IMAGE_INT_FEVERMETERBOTTOM";
		case IMAGE_INT_FEVERRAILING_ID: return "IMAGE_INT_FEVERRAILING";
		case IMAGE_INT_FEVERBARS_ID: return "IMAGE_INT_FEVERBARS";
		case IMAGE_INT_FEVERBARLITES_ID: return "IMAGE_INT_FEVERBARLITES";
		case IMAGE_INT_COUNTER_ID: return "IMAGE_INT_COUNTER";
		case IMAGE_INT_FREEBALLMETER_ID: return "IMAGE_INT_FREEBALLMETER";
		case IMAGE_INT_FREEBALLMETERTOP_ID: return "IMAGE_INT_FREEBALLMETERTOP";
		case IMAGE_INT_BACKSHADOW_ID: return "IMAGE_INT_BACKSHADOW";
		case IMAGE_INT_FEVERGLOW_ID: return "IMAGE_INT_FEVERGLOW";
		case IMAGE_INT_FEVERGLOW1_ID: return "IMAGE_INT_FEVERGLOW1";
		case IMAGE_INT_FEVERGLOW2_ID: return "IMAGE_INT_FEVERGLOW2";
		case IMAGE_INT_FEVERGLOW3_ID: return "IMAGE_INT_FEVERGLOW3";
		case IMAGE_INT_SCOREHILIGHT_ID: return "IMAGE_INT_SCOREHILIGHT";
		case IMAGE_INT_BALLOMASKBL_ID: return "IMAGE_INT_BALLOMASKBL";
		case IMAGE_INT_BALLOMASKBR_ID: return "IMAGE_INT_BALLOMASKBR";
		case IMAGE_INT_BALLOMASKTL_ID: return "IMAGE_INT_BALLOMASKTL";
		case IMAGE_INT_BALLOMASKTR_ID: return "IMAGE_INT_BALLOMASKTR";
		case IMAGE_INT_FBCENTERDISC_ID: return "IMAGE_INT_FBCENTERDISC";
		case IMAGE_INT_FBGLOW_ID: return "IMAGE_INT_FBGLOW";
		case IMAGE_INT_FBFREEBALL_ID: return "IMAGE_INT_FBFREEBALL";
		case IMAGE_INT_FBLIGHTUP_ID: return "IMAGE_INT_FBLIGHTUP";
		case IMAGE_INT_FBPOINTS_ID: return "IMAGE_INT_FBPOINTS";
		case IMAGE_IP_B_ID: return "IMAGE_IP_B";
		case IMAGE_IP_BLC_ID: return "IMAGE_IP_BLC";
		case IMAGE_IP_BRC_ID: return "IMAGE_IP_BRC";
		case IMAGE_IP_L1_ID: return "IMAGE_IP_L1";
		case IMAGE_IP_L2_ID: return "IMAGE_IP_L2";
		case IMAGE_IP_R1_ID: return "IMAGE_IP_R1";
		case IMAGE_IP_R2_ID: return "IMAGE_IP_R2";
		case IMAGE_IP_TL1_ID: return "IMAGE_IP_TL1";
		case IMAGE_IP_TL2_ID: return "IMAGE_IP_TL2";
		case IMAGE_IP_TR1_ID: return "IMAGE_IP_TR1";
		case IMAGE_IP_TR2_ID: return "IMAGE_IP_TR2";
		case IMAGE_IP_TLC_ID: return "IMAGE_IP_TLC";
		case IMAGE_IP_TRC_ID: return "IMAGE_IP_TRC";
		case IMAGE_IP_SHOOTERBACK_ID: return "IMAGE_IP_SHOOTERBACK";
		case IMAGE_IP_SHOOTER_ID: return "IMAGE_IP_SHOOTER";
		case IMAGE_IP_BALLOTRON_ID: return "IMAGE_IP_BALLOTRON";
		case IMAGE_IP_FEVERMETER_ID: return "IMAGE_IP_FEVERMETER";
		case IMAGE_IP_LWINDOW_ID: return "IMAGE_IP_LWINDOW";
		case IMAGE_IP_RWINDOW_ID: return "IMAGE_IP_RWINDOW";
		case IMAGE_IP_SHOOTERORB_ID: return "IMAGE_IP_SHOOTERORB";
		case IMAGE_IP_POWERUPBANNER_ID: return "IMAGE_IP_POWERUPBANNER";
		case IMAGE_IP_ORBGLOW_ID: return "IMAGE_IP_ORBGLOW";
		case IMAGE_MM_INSTRUCTIONS_ID: return "IMAGE_MM_INSTRUCTIONS";
		case IMAGE_MM_CHOOSE_MODE_ID: return "IMAGE_MM_CHOOSE_MODE";
		case IMAGE_MM_BJORN_BUT_ID: return "IMAGE_MM_BJORN_BUT";
		case IMAGE_MM_KATTUT_GREY_ID: return "IMAGE_MM_KATTUT_GREY";
		case IMAGE_MM_CHALLENGE_GREY_ID: return "IMAGE_MM_CHALLENGE_GREY";
		case IMAGE_LS_LEVELSCREEN_ID: return "IMAGE_LS_LEVELSCREEN";
		case IMAGE_LS_LEVELSELECTOR_ID: return "IMAGE_LS_LEVELSELECTOR";
		case IMAGE_LS_CHALLENGEBADGE_ID: return "IMAGE_LS_CHALLENGEBADGE";
		case IMAGE_LS_RANDOMLEVEL_ID: return "IMAGE_LS_RANDOMLEVEL";
		case IMAGE_MM_CHALLENGE_MODE_ID: return "IMAGE_MM_CHALLENGE_MODE";
		case IMAGE_MM_KATTUT_BUT_ID: return "IMAGE_MM_KATTUT_BUT";
		case SOUND_POWERUP_PYRAMID_ID: return "SOUND_POWERUP_PYRAMID";
		case IMAGE_US_POWERS_ID: return "IMAGE_US_POWERS";
		case IMAGE_US_POWERS_TEXT_ID: return "IMAGE_US_POWERS_TEXT";
		case IMAGE_US_LEVELS_ID: return "IMAGE_US_LEVELS";
		case IMAGE_US_LEVELS_TEXT_ID: return "IMAGE_US_LEVELS_TEXT";
		case IMAGE_US_CHALLENGES_ID: return "IMAGE_US_CHALLENGES";
		case IMAGE_US_CHALLENGES_TEXT_ID: return "IMAGE_US_CHALLENGES_TEXT";
		case IMAGE_US_BOXART_ID: return "IMAGE_US_BOXART";
		case IMAGE_US_GETDELUXE_TEXT_ID: return "IMAGE_US_GETDELUXE_TEXT";
		case IMAGE_US_PLAYBUTTON1_ID: return "IMAGE_US_PLAYBUTTON1";
		case IMAGE_US_PLAYWIDGET1_ID: return "IMAGE_US_PLAYWIDGET1";
		case IMAGE_US_UPSELLBOX_ID: return "IMAGE_US_UPSELLBOX";
		case IMAGE_STREAK_ID: return "IMAGE_STREAK";
		case IMAGE_POWERUPICON_ID: return "IMAGE_POWERUPICON";
		case IMAGE_SCOREICON_ID: return "IMAGE_SCOREICON";
		case IMAGE_BONUSHALO_ID: return "IMAGE_BONUSHALO";
		case IMAGE_BONUSGLOW_ID: return "IMAGE_BONUSGLOW";
		case IMAGE_BONUSGLOW_GREEN_ID: return "IMAGE_BONUSGLOW_GREEN";
		case IMAGE_BONUSGLOW_BLUE_ID: return "IMAGE_BONUSGLOW_BLUE";
		case IMAGE_BONUS10000_ID: return "IMAGE_BONUS10000";
		case IMAGE_BONUS50000_ID: return "IMAGE_BONUS50000";
		case IMAGE_BONUS100000_ID: return "IMAGE_BONUS100000";
		case IMAGE_BONUS10000LIGHT_ID: return "IMAGE_BONUS10000LIGHT";
		case IMAGE_BONUS50000LIGHT_ID: return "IMAGE_BONUS50000LIGHT";
		case IMAGE_BONUS100000LIGHT_ID: return "IMAGE_BONUS100000LIGHT";
		case IMAGE_BALL_ID: return "IMAGE_BALL";
		case IMAGE_GUIDERECT_ID: return "IMAGE_GUIDERECT";
		case IMAGE_GUIDERECT2_ID: return "IMAGE_GUIDERECT2";
		case IMAGE_ALPHABALL_ID: return "IMAGE_ALPHABALL";
		case IMAGE_GUIDEARROW_ID: return "IMAGE_GUIDEARROW";
		case IMAGE_GUIDEPOINT_ID: return "IMAGE_GUIDEPOINT";
		case IMAGE_GUIDEHIT_ID: return "IMAGE_GUIDEHIT";
		case IMAGE_BRICK_ID: return "IMAGE_BRICK";
		case IMAGE_BRICKCB_ID: return "IMAGE_BRICKCB";
		case IMAGE_BALLPEG_ID: return "IMAGE_BALLPEG";
		case IMAGE_BALLPEGCB_ID: return "IMAGE_BALLPEGCB";
		case IMAGE_BALLSHADOW_ID: return "IMAGE_BALLSHADOW";
		case IMAGE_PEGSHADOW_ID: return "IMAGE_PEGSHADOW";
		case IMAGE_CIRCLE_ID: return "IMAGE_CIRCLE";
		case IMAGE_COINHEADS_ID: return "IMAGE_COINHEADS";
		case IMAGE_COINTAILS_ID: return "IMAGE_COINTAILS";
		case IMAGE_COINHILIGHT_ID: return "IMAGE_COINHILIGHT";
		case IMAGE_BRICKGLOW_ID: return "IMAGE_BRICKGLOW";
		case IMAGE_PEGGLOW_ID: return "IMAGE_PEGGLOW";
		case IMAGE_PYRAMIDRAY_ID: return "IMAGE_PYRAMIDRAY";
		case IMAGE_FEVERRAY_ID: return "IMAGE_FEVERRAY";
		case IMAGE_FEVERGLOWSTAR_ID: return "IMAGE_FEVERGLOWSTAR";
		case IMAGE_FEVERSTAR_RED_ID: return "IMAGE_FEVERSTAR_RED";
		case IMAGE_FEVERSTAR_GREEN_ID: return "IMAGE_FEVERSTAR_GREEN";
		case IMAGE_FEVERSTAR_BLUE_ID: return "IMAGE_FEVERSTAR_BLUE";
		case IMAGE_FEVERSPARK_ID: return "IMAGE_FEVERSPARK";
		case IMAGE_FEVERTRAIL_ID: return "IMAGE_FEVERTRAIL";
		case IMAGE_FEVERSCORE_ID: return "IMAGE_FEVERSCORE";
		case IMAGE_FEVERSCORETOP_ID: return "IMAGE_FEVERSCORETOP";
		case IMAGE_TINYBLUERIBBON_ID: return "IMAGE_TINYBLUERIBBON";
		case IMAGE_PAUSED_ID: return "IMAGE_PAUSED";
		case IMAGE_CATCHERGLOW_ID: return "IMAGE_CATCHERGLOW";
		case IMAGE_PYRAMIDBALL_ID: return "IMAGE_PYRAMIDBALL";
		case IMAGE_FEVERCAM_ID: return "IMAGE_FEVERCAM";
		case IMAGE_XFEVER_ID: return "IMAGE_XFEVER";
		case IMAGE_XFEVERGLOW_ID: return "IMAGE_XFEVERGLOW";
		case IMAGE_PULSE_NORMAL_ID: return "IMAGE_PULSE_NORMAL";
		case IMAGE_PULSE_GOAL_ID: return "IMAGE_PULSE_GOAL";
		case IMAGE_PULSE_SCORE_ID: return "IMAGE_PULSE_SCORE";
		case IMAGE_PULSE_POWERUP_ID: return "IMAGE_PULSE_POWERUP";
		case IMAGE_PULSE2_SCORE_ID: return "IMAGE_PULSE2_SCORE";
		case IMAGE_PULSE2_POWERUP_ID: return "IMAGE_PULSE2_POWERUP";
		case IMAGE_SPACESTAR_ID: return "IMAGE_SPACESTAR";
		case IMAGE_EMBER_ID: return "IMAGE_EMBER";
		case IMAGE_SMOKE_ID: return "IMAGE_SMOKE";
		case IMAGE_FLECK_ID: return "IMAGE_FLECK";
		case IMAGE_FLAMETRAIL_ID: return "IMAGE_FLAMETRAIL";
		case IMAGE_DLG_BOTTOMBAR_ID: return "IMAGE_DLG_BOTTOMBAR";
		case IMAGE_DLG_BLUEFRAME_ID: return "IMAGE_DLG_BLUEFRAME";
		case IMAGE_DLG_SELECTORFRAME_ID: return "IMAGE_DLG_SELECTORFRAME";
		case IMAGE_DLG_BUTTON1_ID: return "IMAGE_DLG_BUTTON1";
		case IMAGE_DLG_BUTTON3_ID: return "IMAGE_DLG_BUTTON3";
		case IMAGE_DLG_BROWNBUTTON1_ID: return "IMAGE_DLG_BROWNBUTTON1";
		case IMAGE_DLG_BROWNBUTTON2_ID: return "IMAGE_DLG_BROWNBUTTON2";
		case IMAGE_DLG_POPUP_ID: return "IMAGE_DLG_POPUP";
		case IMAGE_DLG_TEXTBOX_ID: return "IMAGE_DLG_TEXTBOX";
		case IMAGE_DLG_DIALOGBOX_ID: return "IMAGE_DLG_DIALOGBOX";
		case IMAGE_DLG_SLIDER_ID: return "IMAGE_DLG_SLIDER";
		case IMAGE_DLG_SLIDERHILIGHT_ID: return "IMAGE_DLG_SLIDERHILIGHT";
		case IMAGE_DLG_SLIDERORB_ID: return "IMAGE_DLG_SLIDERORB";
		case IMAGE_DLG_SEGMENT_ID: return "IMAGE_DLG_SEGMENT";
		case IMAGE_DLG_CONNECTOR_ID: return "IMAGE_DLG_CONNECTOR";
		case IMAGE_DLG_PLAYWIDGET1_ID: return "IMAGE_DLG_PLAYWIDGET1";
		case IMAGE_DLG_PLAYBUTTON1_ID: return "IMAGE_DLG_PLAYBUTTON1";
		case IMAGE_DLG_TEXTRECT_ID: return "IMAGE_DLG_TEXTRECT";
		case IMAGE_DLG_MENU_ID: return "IMAGE_DLG_MENU";
		default: return "";
	}
}

